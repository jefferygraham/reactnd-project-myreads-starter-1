{"version":3,"sources":["BooksAPI.js","ShelfChanger.js","Book.js","SearchBooks.js","BookShelf.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","ShelfChanger","handleChange","_this","props","changeShelf","_this2","this","react_default","a","createElement","className","onChange","e","target","value","defaultValue","disabled","Component","Book","style","width","height","backgroundImage","imageLinks","smallThumbnail","src_ShelfChanger","title","authors","map","author","key","SearchBooks","state","getShelf","foundBook","mainBooks","filter","b","length","searchBooks","BooksAPI","setState","react_router_dom","to","onClick","showSearchPage","type","placeholder","Array","isArray","src_Book","BookShelf","BooksApp","updateBookInfo","_this3","react_router","exact","path","src_SearchBooks","shelves","src_BookShelf","React","defaultProps","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f50f10a6.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ShelfChanger extends Component {\r\n  handleChange = (book, shelf) => {\r\n    this.props.changeShelf(book, shelf);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"book-shelf-changer\">\r\n        <select\r\n          onChange={(e) => this.handleChange(this.props.book, e.target.value)}\r\n          defaultValue={this.props.shelf}\r\n        >\r\n          <option value=\"move\" disabled>\r\n            Move to...\r\n          </option>\r\n          <option value=\"currentlyReading\">Currently Reading</option>\r\n          <option value=\"wantToRead\">Want to Read</option>\r\n          <option value=\"read\">Read</option>\r\n          <option value=\"none\">None</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nShelfChanger.propTypes = {\r\n  book: PropTypes.object.isRequired,\r\n  shelf: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  changeShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ShelfChanger;\r\n","import React, { Component } from \"react\";\r\nimport ShelfChanger from \"./ShelfChanger\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Book extends Component {\r\n  handleChange = (book, shelf) => {\r\n    this.props.changeShelf(book, shelf);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <li>\r\n        <div className=\"book\">\r\n          <div className=\"book-top\">\r\n            <div\r\n              className=\"book-cover\"\r\n              style={{\r\n                width: 128,\r\n                height: 193,\r\n                backgroundImage:\r\n                  this.props.book.imageLinks &&\r\n                  `url(${this.props.book.imageLinks.smallThumbnail})`,\r\n              }}\r\n            />\r\n            <ShelfChanger\r\n              book={this.props.book}\r\n              shelf={this.props.shelf}\r\n              id={this.props.book.id}\r\n              changeShelf={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"book-title\">{this.props.book.title}</div>\r\n          <div className=\"book-authors\">\r\n            {this.props.book.authors &&\r\n              this.props.book.authors.map((author) => (\r\n                <div key={author}>{author}</div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nBook.propTypes = {\r\n  book: PropTypes.object.isRequired,\r\n  shelf: PropTypes.func.isRequired,\r\n  key: PropTypes.string.isRequired,\r\n  changeShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Book;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport Book from \"./Book\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass SearchBooks extends Component {\r\n  state = {\r\n    query: \"\",\r\n    books: [],\r\n  };\r\n\r\n  getShelf = (book) => {\r\n    const foundBook = this.props.mainBooks.filter((b) => b.id === book.id);\r\n    if (foundBook.length > 0) {\r\n      return foundBook[0].shelf;\r\n    }\r\n    return \"none\";\r\n  };\r\n\r\n  searchBooks = (query) => {\r\n    BooksAPI.search(query).then((books) => {\r\n      this.setState(() => ({\r\n        books,\r\n      }));\r\n    });\r\n  };\r\n\r\n  handleChange = (query) => {\r\n    this.setState(() => ({\r\n      query: query,\r\n    }));\r\n    this.searchBooks(query);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link\r\n            to=\"/\"\r\n            className=\"close-search\"\r\n            onClick={() => this.setState({ showSearchPage: false })}\r\n          >\r\n            Close\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n            <input\r\n              onChange={(e) => this.handleChange(e.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author\"\r\n              value={this.state.query}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          {Array.isArray(this.state.books) ? (\r\n            <ol className=\"books-grid\">\r\n              {this.state.books &&\r\n                this.state.books.map((book) => (\r\n                  <Book\r\n                    book={book}\r\n                    shelf={this.getShelf(book)}\r\n                    key={book.id}\r\n                    changeShelf={this.props.update}\r\n                  />\r\n                ))}\r\n            </ol>\r\n          ) : (\r\n            <h2>No Results</h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBooks.propTypes = {\r\n  search: PropTypes.func.isRequired,\r\n  update: PropTypes.func.isRequired,\r\n  mainBooks: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default SearchBooks;\r\n","import React from \"react\";\r\nimport Book from \"./Book\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BookShelf = (props) => {\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{props.shelf.title}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {props.books\r\n            .filter((book) => book.shelf === props.shelf.shelf)\r\n            .map((book) => (\r\n              <Book\r\n                book={book}\r\n                changeShelf={props.update}\r\n                shelf={book.shelf}\r\n                key={book.id}\r\n              />\r\n            ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBookShelf.propTypes = {\r\n  books: PropTypes.array.isRequired,\r\n  shelf: PropTypes.object.isRequired,\r\n  update: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BookShelf;\r\n","import React from \"react\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport \"./App.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport SearchBooks from \"./SearchBooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BookShelf from \"./BookShelf\";\r\n\r\nclass BooksApp extends React.Component {\r\n  static defaultProps = {\r\n    shelves: [\r\n      { title: \"Currently Reading\", shelf: \"currentlyReading\" },\r\n      { title: \"Want to Read\", shelf: \"wantToRead\" },\r\n      { title: \"Read\", shelf: \"read\" },\r\n    ],\r\n  };\r\n\r\n  state = {\r\n    /**\r\n     * TODO: Instead of using this state variable to keep track of which page\r\n     * we're on, use the URL in the browser's address bar. This will ensure that\r\n     * users can use the browser's back and forward buttons to navigate between\r\n     * pages, as well as provide a good URL they can bookmark and share.\r\n     */\r\n    books: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then((books) => {\r\n      this.setState(() => ({\r\n        books,\r\n      }));\r\n    });\r\n  }\r\n\r\n  updateBookInfo = (book, shelf) => {\r\n    BooksAPI.update(book, shelf).then(() => {\r\n      BooksAPI.getAll().then((books) => {\r\n        this.setState(() => ({\r\n          books,\r\n        }));\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route exact path=\"/search\">\r\n          <SearchBooks\r\n            search={this.searchBooks}\r\n            update={this.updateBookInfo}\r\n            mainBooks={this.state.books}\r\n          />\r\n        </Route>\r\n\r\n        <Route exact path=\"/\">\r\n          <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n              <div>\r\n                {this.props.shelves.map((shelf) => (\r\n                  <BookShelf\r\n                    update={this.updateBookInfo}\r\n                    key={shelf.shelf}\r\n                    shelf={shelf}\r\n                    books={this.state.books}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <Link to=\"/search\">\r\n              <div className=\"open-search\">\r\n                <button onClick={() => this.setState({ showSearchPage: true })}>\r\n                  Add a book\r\n                </button>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        </Route>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}